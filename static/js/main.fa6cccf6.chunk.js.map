{"version":3,"sources":["styles/GlobalStyle.js","styles/Theme.js","components/TodoTemplate.js","TodoContext.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoForm.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","_templateObject","normalize","_ref","theme","colors","grey2","grey1","grey3","head","text","green1","green2","green3","red1","red2","red3","TodoTemplateBlock","styled","div","TodoTemplate_templateObject","TodoTemplate","children","react_default","a","createElement","initialTodos","id","isDone","todoReducer","state","action","type","concat","todo","map","Object","objectSpread","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","TodoHeadBlock","TodoHead_templateObject","_ref2","_ref3","_ref4","TodoHead","todoCnt","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","length","RemoveBtn","TodoItem_templateObject","TodoItemBlock","_templateObject2","CheckBtn","_templateObject3","_ref5","css","_templateObject4","_ref6","_ref7","Text","_templateObject5","_ref8","_ref9","_templateObject6","_ref10","React","memo","onClick","index_esm","TodoListBlock","TodoList_templateObject","TodoList","todos","components_TodoItem","key","InsertBtn","button","TodoForm_templateObject","isOpened","TodoForm_templateObject2","InsertFormPositioner","TodoForm_templateObject3","InsertForm","form","TodoForm_templateObject4","Input","input","TodoForm_templateObject5","_useState","useState","_useState2","setIsOpened","_useState3","_useState4","inputValue","setInputValue","useTodoNextId","Fragment","onSubmit","e","preventDefault","current","autoFocus","placeholder","onChange","target","prevIsOpened","App","styled_components_browser_esm","styles_GlobalStyle","components_TodoTemplate","components_TodoHead","components_TodoList","components_TodoForm","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fa6cccf6.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\nconst GlobalStyle = createGlobalStyle`\n${normalize}\n\n* {\n  box-sizing: border-box;\n  outline: none;\n}\n\n@import url(https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap);\n\nbody {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  font-family: 'Noto Sans KR', 'sans-serif', 'serif';\n  background: ${({ theme }) => theme.colors.grey2};\n}\n\n#root {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n`;\n\nexport default GlobalStyle;\n","const colors = {\n  grey1: '#ced4da',\n  grey2: '#e9ecef',\n  grey3: '#f8f9fa',\n\n  head: '#343a40',\n  text: '#495057',\n\n  green1: '#20c997',\n  green2: '#38d9a9',\n  green3: '#63e6be',\n\n  red1: '#fa5252',\n  red2: '#ff6b6b',\n  red3: '#ff8787',\n};\n\nconst theme = {\n  colors,\n};\n\nexport default theme;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst TodoTemplate = ({ children }) => {\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\n};\n\nconst TodoTemplateBlock = styled.div`\n  width: 512px;\n  height: 768px;\n\n  position: relative;\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\n\n  margin-top: 96px;\n  margin-bottom: 32px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport default TodoTemplate;\n","import React, { useReducer, createContext, useContext, useRef } from 'react';\n\nconst initialTodos = [\n  {\n    id: 1,\n    text: '할 일',\n    isDone: false,\n  },\n  {\n    id: 2,\n    text: 'Done',\n    isDone: true,\n  },\n  {\n    id: 3,\n    text: 'long input long input long input long input long input long input',\n    isDone: false,\n  },\n];\n\nconst todoReducer = (state, action) => {\n  switch (action.type) {\n    case 'CREATE':\n      return state.concat(action.todo);\n    case 'TOGGLE':\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, isDone: !todo.isDone } : todo\n      );\n    case 'REMOVE':\n      return state.filter((todo) => todo.id !== action.id);\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\n\nexport function TodoProvider({ children }) {\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\n  const nextId = useRef(4);\n  return (\n    <TodoStateContext.Provider value={state}>\n      <TodoDispatchContext.Provider value={dispatch}>\n        <TodoNextIdContext.Provider value={nextId}>\n          {children}\n        </TodoNextIdContext.Provider>\n      </TodoDispatchContext.Provider>\n    </TodoStateContext.Provider>\n  );\n}\n\nexport const useTodoState = () => {\n  const context = useContext(TodoStateContext);\n  if (!context) {\n    throw new Error('Cannot find TodoProvider');\n  }\n  return context;\n};\n\nexport const useTodoDispatch = () => {\n  const context = useContext(TodoDispatchContext);\n  if (!context) {\n    throw new Error('Cannot find TodoProvider');\n  }\n  return context;\n};\n\nexport const useTodoNextId = () => {\n  const context = useContext(TodoNextIdContext);\n  if (!context) {\n    throw new Error('Cannot find TodoProvider');\n  }\n  return context;\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useTodoState } from '../TodoContext';\n\nconst TodoHead = () => {\n  const todos = useTodoState();\n  const todoCnt = todos.filter((todo) => !todo.isDone);\n\n  const today = new Date();\n  const dateString = today.toLocaleDateString('ko-KR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n  const dayName = today.toLocaleDateString('ko-KR', { weekday: 'long' });\n\n  return (\n    <TodoHeadBlock>\n      <h1>{dateString}</h1>\n      <h2 className='day'>{dayName}</h2>\n      <h2 className='todo-cnt'>할 일 {todoCnt.length}개 남음</h2>\n    </TodoHeadBlock>\n  );\n};\n\nconst TodoHeadBlock = styled.div`\n  padding: 48px 32px 10px 24px;\n\n  border-bottom: 1px solid ${({ theme }) => theme.colors.grey2};\n  h1 {\n    margin: 0;\n    font-size: 2rem;\n    color: ${({ theme }) => theme.colors.head};\n  }\n  .day {\n    margin-top: 4px;\n    color: ${({ theme }) => theme.colors.text};\n    font-size: 1.5rem;\n  }\n  .todo-cnt {\n    color: ${({ theme }) => theme.colors.green1};\n    font-size: 1.5rem;\n    margin-top: 30px;\n  }\n`;\n\nexport default TodoHead;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdDone, MdDelete } from 'react-icons/md';\nimport { useTodoDispatch } from '../TodoContext';\n\nconst TodoItem = ({ id, isDone, text }) => {\n  const dispatch = useTodoDispatch();\n  const handleToggle = () => dispatch({ type: 'TOGGLE', id });\n  const handleRemove = () => dispatch({ type: 'REMOVE', id });\n\n  return (\n    <TodoItemBlock>\n      <CheckBtn isDone={isDone} onClick={handleToggle}>\n        {isDone && <MdDone />}\n      </CheckBtn>\n      <Text isDone={isDone}>{text}</Text>\n      <RemoveBtn onClick={handleRemove}>\n        <MdDelete />\n      </RemoveBtn>\n    </TodoItemBlock>\n  );\n};\n\nconst RemoveBtn = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  color: ${({ theme }) => theme.colors.grey1};\n  font-size: 24px;\n  cursor: pointer;\n  &:hover {\n    color: ${({ theme }) => theme.colors.red1};\n  }\n  display: none;\n`;\n\nconst TodoItemBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 12px;\n  &:hover {\n    ${RemoveBtn} {\n      display: initial;\n    }\n  }\n`;\n\nconst CheckBtn = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  border: 1px solid ${({ theme }) => theme.colors.grey1};\n  cursor: pointer;\n\n  flex: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  font-size: 24px;\n\n  ${({ isDone }) =>\n    isDone &&\n    css`\n      border: 1px solid ${({ theme }) => theme.colors.green2};\n      color: ${({ theme }) => theme.colors.green2};\n    `}\n`;\n\nconst Text = styled.div`\n  height: 32px;\n  padding-top: 4.5px;\n  vertical-align: middle;\n\n  font-size: 1.2rem;\n  color: ${({ theme }) => theme.colors.text};\n\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n\n  ${({ isDone }) =>\n    isDone &&\n    css`\n      color: ${({ theme }) => theme.colors.grey1};\n    `}\n`;\n\nexport default React.memo(TodoItem);\n","import React from 'react';\nimport styled from 'styled-components';\nimport TodoItem from './TodoItem';\nimport { useTodoState } from '../TodoContext';\n\nconst TodoList = () => {\n  const todos = useTodoState();\n\n  return (\n    <TodoListBlock>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          id={todo.id}\n          text={todo.text}\n          isDone={todo.isDone}\n        />\n      ))}\n    </TodoListBlock>\n  );\n};\n\nconst TodoListBlock = styled.div`\n  flex: 1;\n  padding: 20px 32px;\n  padding-bottom: 48px;\n  overflow-y: auto;\n`;\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\n\nconst TodoForm = () => {\n  const [isOpened, setIsOpened] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const handleInputFormToggle = () => setIsOpened(prevIsOpened => !prevIsOpened);\n  const handleChange = (e) => setInputValue(e.target.value);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: 'CREATE',\n      todo: {\n        id: nextId.current,\n        text: inputValue,\n        isDone: false,\n      },\n    });\n    setInputValue('');\n    setIsOpened(false);\n    nextId.current += 1;\n  };\n\n  return (\n    <>\n      {isOpened && (\n        <InsertFormPositioner>\n          <InsertForm onSubmit={handleSubmit}>\n            <Input\n              autoFocus\n              placeholder='할 일을 입력 후, Enter 를 누르세요.'\n              onChange={handleChange}\n              value={inputValue}\n            />\n          </InsertForm>\n        </InsertFormPositioner>\n      )}\n      <InsertBtn onClick={handleInputFormToggle} isOpened={isOpened}>\n        <MdAdd />\n      </InsertBtn>\n    </>\n  );\n};\n\nconst InsertBtn = styled.button`\n  background: ${({ theme }) => theme.colors.green2};\n  &:hover {\n    background: ${({ theme }) => theme.colors.green3};\n  }\n  &:active {\n    background: ${({ theme }) => theme.colors.green1};\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  border: none;\n\n  position: absolute;\n  left: 50%;\n  margin: 0 auto;\n  bottom: 0;\n  transform: translate(-50%, 50%);\n\n  font-size: 60px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n\n  transition: 0.125s all ease-in;\n  ${({ isOpened }) =>\n    isOpened &&\n    css`\n      background: ${({ theme }) => theme.colors.red2};\n      &:hover {\n        background: ${({ theme }) => theme.colors.red3};\n      }\n      &:active {\n        background: ${({ theme }) => theme.colors.red1};\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nconst InsertFormPositioner = styled.div`\n  left: 0;\n  bottom: 0;\n  position: absolute;\n  width: 100%;\n`;\n\nconst InsertForm = styled.form`\n  background: ${({ theme }) => theme.colors.grey3};\n  padding: 32px 32px 72px 32px;\n\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid ${({ theme }) => theme.colors.grey2};\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid ${({ theme }) => theme.colors.grey2};\n  width: 100%;\n  font-size: 1.5rem;\n`;\n\nexport default React.memo(TodoForm);\n","import React from 'react';\nimport GlobalStyle from './styles/GlobalStyle';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './styles/Theme';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoHead from './components/TodoHead';\nimport TodoList from './components/TodoList';\nimport TodoForm from './components/TodoForm';\nimport { TodoProvider } from './TodoContext';\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <TodoProvider>\n        <GlobalStyle />\n        <TodoTemplate>\n          <TodoHead />\n          <TodoList />\n          <TodoForm />\n        </TodoTemplate>\n      </TodoProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}